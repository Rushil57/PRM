//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PatientPortal.Utility.MedDataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="MedData External Submission PortalSoap", Namespace="http://services.medconnect.net/submissionportal", ConfigurationName="MedDataService.MedDataExternalSubmissionPortalSoap")]
    public interface MedDataExternalSubmissionPortalSoap {
        
        // CODEGEN: Generating message contract since message SubmitASyncRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/SubmitASync", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.SubmitASyncResponse SubmitASync(PatientPortal.Utility.MedDataService.SubmitASyncRequest request);
        
        // CODEGEN: Generating message contract since message SubmitASyncDetailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/SubmitASyncDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.SubmitASyncDetailResponse SubmitASyncDetail(PatientPortal.Utility.MedDataService.SubmitASyncDetailRequest request);
        
        // CODEGEN: Generating message contract since message GetResponsesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/GetResponses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.GetResponsesResponse GetResponses(PatientPortal.Utility.MedDataService.GetResponsesRequest request);
        
        // CODEGEN: Generating message contract since message GetResponsesBySubmissionIdRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/GetResponsesBySubmissionId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.GetResponsesBySubmissionIdResponse GetResponsesBySubmissionId(PatientPortal.Utility.MedDataService.GetResponsesBySubmissionIdRequest request);
        
        // CODEGEN: Generating message contract since message GetResponsesByTrackingIdRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/GetResponsesByTrackingId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.GetResponsesByTrackingIdResponse GetResponsesByTrackingId(PatientPortal.Utility.MedDataService.GetResponsesByTrackingIdRequest request);
        
        // CODEGEN: Generating message contract since message GetResponsesByPayerIdRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/GetResponsesByPayerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.GetResponsesByPayerIdResponse GetResponsesByPayerId(PatientPortal.Utility.MedDataService.GetResponsesByPayerIdRequest request);
        
        // CODEGEN: Generating message contract since message GetResponsesByProviderIdRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/GetResponsesByProviderId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.GetResponsesByProviderIdResponse GetResponsesByProviderId(PatientPortal.Utility.MedDataService.GetResponsesByProviderIdRequest request);
        
        // CODEGEN: Generating message contract since message SubmitSyncRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/SubmitSync", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.SubmitSyncResponse SubmitSync(PatientPortal.Utility.MedDataService.SubmitSyncRequest request);
        
        // CODEGEN: Generating message contract since message SubmitSyncDetailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://services.medconnect.net/submissionportal/SubmitSyncDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatientPortal.Utility.MedDataService.SubmitSyncDetailResponse SubmitSyncDetail(PatientPortal.Utility.MedDataService.SubmitSyncDetailRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.medconnect.net/submissionportal")]
    public partial class SecurityHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitASync", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitASyncRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string request;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string requestFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public string submissionTimeout;
        
        public SubmitASyncRequest() {
        }
        
        public SubmitASyncRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string submissionTimeout) {
            this.SecurityHeader = SecurityHeader;
            this.request = request;
            this.requestFormat = requestFormat;
            this.submissionTimeout = submissionTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitASyncResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitASyncResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string SubmitASyncResult;
        
        public SubmitASyncResponse() {
        }
        
        public SubmitASyncResponse(string SubmitASyncResult) {
            this.SubmitASyncResult = SubmitASyncResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitASyncDetail", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitASyncDetailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string request;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string requestFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public string submissionTimeout;
        
        public SubmitASyncDetailRequest() {
        }
        
        public SubmitASyncDetailRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string submissionTimeout) {
            this.SecurityHeader = SecurityHeader;
            this.request = request;
            this.requestFormat = requestFormat;
            this.submissionTimeout = submissionTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitASyncDetailResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitASyncDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string[] SubmitASyncDetailResult;
        
        public SubmitASyncDetailResponse() {
        }
        
        public SubmitASyncDetailResponse(string[] SubmitASyncDetailResult) {
            this.SubmitASyncDetailResult = SubmitASyncDetailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponses", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string responseFormat;
        
        public GetResponsesRequest() {
        }
        
        public GetResponsesRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string responseFormat) {
            this.SecurityHeader = SecurityHeader;
            this.responseFormat = responseFormat;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string GetResponsesResult;
        
        public GetResponsesResponse() {
        }
        
        public GetResponsesResponse(string GetResponsesResult) {
            this.GetResponsesResult = GetResponsesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesBySubmissionId", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesBySubmissionIdRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string submissionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string responseFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public bool overrideSent;
        
        public GetResponsesBySubmissionIdRequest() {
        }
        
        public GetResponsesBySubmissionIdRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string submissionId, string responseFormat, bool overrideSent) {
            this.SecurityHeader = SecurityHeader;
            this.submissionId = submissionId;
            this.responseFormat = responseFormat;
            this.overrideSent = overrideSent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesBySubmissionIdResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesBySubmissionIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string GetResponsesBySubmissionIdResult;
        
        public GetResponsesBySubmissionIdResponse() {
        }
        
        public GetResponsesBySubmissionIdResponse(string GetResponsesBySubmissionIdResult) {
            this.GetResponsesBySubmissionIdResult = GetResponsesBySubmissionIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesByTrackingId", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesByTrackingIdRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string trackingId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string responseFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public bool overrideSent;
        
        public GetResponsesByTrackingIdRequest() {
        }
        
        public GetResponsesByTrackingIdRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string trackingId, string responseFormat, bool overrideSent) {
            this.SecurityHeader = SecurityHeader;
            this.trackingId = trackingId;
            this.responseFormat = responseFormat;
            this.overrideSent = overrideSent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesByTrackingIdResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesByTrackingIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string GetResponsesByTrackingIdResult;
        
        public GetResponsesByTrackingIdResponse() {
        }
        
        public GetResponsesByTrackingIdResponse(string GetResponsesByTrackingIdResult) {
            this.GetResponsesByTrackingIdResult = GetResponsesByTrackingIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesByPayerId", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesByPayerIdRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string payerId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string responseFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public bool overrideSent;
        
        public GetResponsesByPayerIdRequest() {
        }
        
        public GetResponsesByPayerIdRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string payerId, string responseFormat, bool overrideSent) {
            this.SecurityHeader = SecurityHeader;
            this.payerId = payerId;
            this.responseFormat = responseFormat;
            this.overrideSent = overrideSent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesByPayerIdResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesByPayerIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string GetResponsesByPayerIdResult;
        
        public GetResponsesByPayerIdResponse() {
        }
        
        public GetResponsesByPayerIdResponse(string GetResponsesByPayerIdResult) {
            this.GetResponsesByPayerIdResult = GetResponsesByPayerIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesByProviderId", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesByProviderIdRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string providerId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string responseFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public bool overrideSent;
        
        public GetResponsesByProviderIdRequest() {
        }
        
        public GetResponsesByProviderIdRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string providerId, string responseFormat, bool overrideSent) {
            this.SecurityHeader = SecurityHeader;
            this.providerId = providerId;
            this.responseFormat = responseFormat;
            this.overrideSent = overrideSent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponsesByProviderIdResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class GetResponsesByProviderIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string GetResponsesByProviderIdResult;
        
        public GetResponsesByProviderIdResponse() {
        }
        
        public GetResponsesByProviderIdResponse(string GetResponsesByProviderIdResult) {
            this.GetResponsesByProviderIdResult = GetResponsesByProviderIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitSync", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitSyncRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string request;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string requestFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public string responseFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=3)]
        public string synchronousTimeout;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=4)]
        public string submissionTimeout;
        
        public SubmitSyncRequest() {
        }
        
        public SubmitSyncRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string responseFormat, string synchronousTimeout, string submissionTimeout) {
            this.SecurityHeader = SecurityHeader;
            this.request = request;
            this.requestFormat = requestFormat;
            this.responseFormat = responseFormat;
            this.synchronousTimeout = synchronousTimeout;
            this.submissionTimeout = submissionTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitSyncResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitSyncResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string SubmitSyncResult;
        
        public SubmitSyncResponse() {
        }
        
        public SubmitSyncResponse(string SubmitSyncResult) {
            this.SubmitSyncResult = SubmitSyncResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitSyncDetail", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitSyncDetailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://services.medconnect.net/submissionportal")]
        public PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string request;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=1)]
        public string requestFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=2)]
        public string responseFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=3)]
        public string synchronousTimeout;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=4)]
        public string submissionTimeout;
        
        public SubmitSyncDetailRequest() {
        }
        
        public SubmitSyncDetailRequest(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string responseFormat, string synchronousTimeout, string submissionTimeout) {
            this.SecurityHeader = SecurityHeader;
            this.request = request;
            this.requestFormat = requestFormat;
            this.responseFormat = responseFormat;
            this.synchronousTimeout = synchronousTimeout;
            this.submissionTimeout = submissionTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitSyncDetailResponse", WrapperNamespace="http://services.medconnect.net/submissionportal", IsWrapped=true)]
    public partial class SubmitSyncDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.medconnect.net/submissionportal", Order=0)]
        public string[] SubmitSyncDetailResult;
        
        public SubmitSyncDetailResponse() {
        }
        
        public SubmitSyncDetailResponse(string[] SubmitSyncDetailResult) {
            this.SubmitSyncDetailResult = SubmitSyncDetailResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MedDataExternalSubmissionPortalSoapChannel : PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedDataExternalSubmissionPortalSoapClient : System.ServiceModel.ClientBase<PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap>, PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap {
        
        public MedDataExternalSubmissionPortalSoapClient() {
        }
        
        public MedDataExternalSubmissionPortalSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedDataExternalSubmissionPortalSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedDataExternalSubmissionPortalSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedDataExternalSubmissionPortalSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.SubmitASyncResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.SubmitASync(PatientPortal.Utility.MedDataService.SubmitASyncRequest request) {
            return base.Channel.SubmitASync(request);
        }
        
        public string SubmitASync(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string submissionTimeout) {
            PatientPortal.Utility.MedDataService.SubmitASyncRequest inValue = new PatientPortal.Utility.MedDataService.SubmitASyncRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.request = request;
            inValue.requestFormat = requestFormat;
            inValue.submissionTimeout = submissionTimeout;
            PatientPortal.Utility.MedDataService.SubmitASyncResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).SubmitASync(inValue);
            return retVal.SubmitASyncResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.SubmitASyncDetailResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.SubmitASyncDetail(PatientPortal.Utility.MedDataService.SubmitASyncDetailRequest request) {
            return base.Channel.SubmitASyncDetail(request);
        }
        
        public string[] SubmitASyncDetail(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string submissionTimeout) {
            PatientPortal.Utility.MedDataService.SubmitASyncDetailRequest inValue = new PatientPortal.Utility.MedDataService.SubmitASyncDetailRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.request = request;
            inValue.requestFormat = requestFormat;
            inValue.submissionTimeout = submissionTimeout;
            PatientPortal.Utility.MedDataService.SubmitASyncDetailResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).SubmitASyncDetail(inValue);
            return retVal.SubmitASyncDetailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.GetResponsesResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.GetResponses(PatientPortal.Utility.MedDataService.GetResponsesRequest request) {
            return base.Channel.GetResponses(request);
        }
        
        public string GetResponses(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string responseFormat) {
            PatientPortal.Utility.MedDataService.GetResponsesRequest inValue = new PatientPortal.Utility.MedDataService.GetResponsesRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.responseFormat = responseFormat;
            PatientPortal.Utility.MedDataService.GetResponsesResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).GetResponses(inValue);
            return retVal.GetResponsesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.GetResponsesBySubmissionIdResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.GetResponsesBySubmissionId(PatientPortal.Utility.MedDataService.GetResponsesBySubmissionIdRequest request) {
            return base.Channel.GetResponsesBySubmissionId(request);
        }
        
        public string GetResponsesBySubmissionId(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string submissionId, string responseFormat, bool overrideSent) {
            PatientPortal.Utility.MedDataService.GetResponsesBySubmissionIdRequest inValue = new PatientPortal.Utility.MedDataService.GetResponsesBySubmissionIdRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.submissionId = submissionId;
            inValue.responseFormat = responseFormat;
            inValue.overrideSent = overrideSent;
            PatientPortal.Utility.MedDataService.GetResponsesBySubmissionIdResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).GetResponsesBySubmissionId(inValue);
            return retVal.GetResponsesBySubmissionIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.GetResponsesByTrackingIdResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.GetResponsesByTrackingId(PatientPortal.Utility.MedDataService.GetResponsesByTrackingIdRequest request) {
            return base.Channel.GetResponsesByTrackingId(request);
        }
        
        public string GetResponsesByTrackingId(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string trackingId, string responseFormat, bool overrideSent) {
            PatientPortal.Utility.MedDataService.GetResponsesByTrackingIdRequest inValue = new PatientPortal.Utility.MedDataService.GetResponsesByTrackingIdRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.trackingId = trackingId;
            inValue.responseFormat = responseFormat;
            inValue.overrideSent = overrideSent;
            PatientPortal.Utility.MedDataService.GetResponsesByTrackingIdResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).GetResponsesByTrackingId(inValue);
            return retVal.GetResponsesByTrackingIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.GetResponsesByPayerIdResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.GetResponsesByPayerId(PatientPortal.Utility.MedDataService.GetResponsesByPayerIdRequest request) {
            return base.Channel.GetResponsesByPayerId(request);
        }
        
        public string GetResponsesByPayerId(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string payerId, string responseFormat, bool overrideSent) {
            PatientPortal.Utility.MedDataService.GetResponsesByPayerIdRequest inValue = new PatientPortal.Utility.MedDataService.GetResponsesByPayerIdRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.payerId = payerId;
            inValue.responseFormat = responseFormat;
            inValue.overrideSent = overrideSent;
            PatientPortal.Utility.MedDataService.GetResponsesByPayerIdResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).GetResponsesByPayerId(inValue);
            return retVal.GetResponsesByPayerIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.GetResponsesByProviderIdResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.GetResponsesByProviderId(PatientPortal.Utility.MedDataService.GetResponsesByProviderIdRequest request) {
            return base.Channel.GetResponsesByProviderId(request);
        }
        
        public string GetResponsesByProviderId(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string providerId, string responseFormat, bool overrideSent) {
            PatientPortal.Utility.MedDataService.GetResponsesByProviderIdRequest inValue = new PatientPortal.Utility.MedDataService.GetResponsesByProviderIdRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.providerId = providerId;
            inValue.responseFormat = responseFormat;
            inValue.overrideSent = overrideSent;
            PatientPortal.Utility.MedDataService.GetResponsesByProviderIdResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).GetResponsesByProviderId(inValue);
            return retVal.GetResponsesByProviderIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.SubmitSyncResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.SubmitSync(PatientPortal.Utility.MedDataService.SubmitSyncRequest request) {
            return base.Channel.SubmitSync(request);
        }
        
        public string SubmitSync(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string responseFormat, string synchronousTimeout, string submissionTimeout) {
            PatientPortal.Utility.MedDataService.SubmitSyncRequest inValue = new PatientPortal.Utility.MedDataService.SubmitSyncRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.request = request;
            inValue.requestFormat = requestFormat;
            inValue.responseFormat = responseFormat;
            inValue.synchronousTimeout = synchronousTimeout;
            inValue.submissionTimeout = submissionTimeout;
            PatientPortal.Utility.MedDataService.SubmitSyncResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).SubmitSync(inValue);
            return retVal.SubmitSyncResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatientPortal.Utility.MedDataService.SubmitSyncDetailResponse PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap.SubmitSyncDetail(PatientPortal.Utility.MedDataService.SubmitSyncDetailRequest request) {
            return base.Channel.SubmitSyncDetail(request);
        }
        
        public string[] SubmitSyncDetail(PatientPortal.Utility.MedDataService.SecurityHeader SecurityHeader, string request, string requestFormat, string responseFormat, string synchronousTimeout, string submissionTimeout) {
            PatientPortal.Utility.MedDataService.SubmitSyncDetailRequest inValue = new PatientPortal.Utility.MedDataService.SubmitSyncDetailRequest();
            inValue.SecurityHeader = SecurityHeader;
            inValue.request = request;
            inValue.requestFormat = requestFormat;
            inValue.responseFormat = responseFormat;
            inValue.synchronousTimeout = synchronousTimeout;
            inValue.submissionTimeout = submissionTimeout;
            PatientPortal.Utility.MedDataService.SubmitSyncDetailResponse retVal = ((PatientPortal.Utility.MedDataService.MedDataExternalSubmissionPortalSoap)(this)).SubmitSyncDetail(inValue);
            return retVal.SubmitSyncDetailResult;
        }
    }
}
