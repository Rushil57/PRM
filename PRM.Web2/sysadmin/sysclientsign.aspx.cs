using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.Services;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;


public partial class sysclientsign : BasePage
{
    protected void Page_Load(object sender, EventArgs e)
    {
    }
    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        //Put user code to initialize the page here
        Topaz.SigPlusNET sigObj = new Topaz.SigPlusNET();

        sigObj.SetSigCompressionMode(1);
        //Now, get sigstring from client
        //Sigstring can be stored in a database if 
        //a biometric signature is desired rather than an image

        //Image String for testing without device. Will create image with words "Test Image".
        string TestString
        if (hdnSigData.Value == "") { hdnSigData.Value = TestString; }

        sigObj.SetSigString(hdnSigData.Value);

        if (sigObj.NumberOfTabletPoints() > 0)
        {
            sigObj.SetImageFileFormat(0);
            sigObj.SetImageXSize(500);
            sigObj.SetImageYSize(150);
            sigObj.SetImagePenWidth(8);
            sigObj.SetJustifyX(5);
            sigObj.SetJustifyY(5);
            sigObj.SetJustifyMode(5);
            System.Drawing.Image img = sigObj.GetSigImage();
            String path;
            //path = System.AppDomain.CurrentDomain.BaseDirectory & "mySig.bmp"
            path = "C:\\mySig.png";
            img.Save(path, System.Drawing.Imaging.ImageFormat.Png);
            Response.Write("Image saved successfully to " + path);
        }
        else
        {
            //signature has not been returned successfully!
        }
    }
}
